version: "3"

includes:
  sdk:
    taskfile: ./sso-sdk/Taskfile_{{OS}}.yaml
    optional: true

  redis:
    taskfile: ./tools/containers/redis/Taskfile.yaml
    optional: true

  kafka:
    taskfile: ./tools/containers/kafka/Taskfile.yaml
    optional: true

  dg:
    taskfile: ./tools/containers/dgraph/Taskfile.yaml
    optional: true

  grafana:
    taskfile: ./tools/containers/grafana-loki-promtail/Taskfile.yaml
    optional: true

dotenv: ['.env']

env:
  # internal folder
  INTERNAL_WILDCARD: ./internal/...

vars:
  FLAG_CONFIG: --config=$CONFIG_PATH

tasks:

  # MAIN

  run:
    desc: Run main application
    cmd: go run ./cmd/sso {{.FLAG_CONFIG}}

  build:
    desc: Builds application
    cmds:
      - 'go build -o bin/ ./cmd/sso/main.go'
    sources:
      - ./*.go,
      - ./**/*.go

  # TESTING

  test:
    desc: Test all packages
    cmd: sh scripts/testing.sh $COVERAGE_FILE
  
  test-coverage:
    desc: Generates coverage html after testing
    aliases: [cover]
    deps:
      - test
    cmd: go tool cover -html=$COVERAGE_FILE

  bench:
    desc: Run benchmarks
    cmd: go test -bench . -benchmem ./internal/lib/collections -cpuprofile=./profiles/cpu.out -memprofile=./profiles/mem.out

  prof:
    desc: Use pprof 
    cmds:
      - go tool pprof --pdf ./profiles/cpu.out > ./profiles/cpu-prof.pdf
      - go tool pprof --pdf ./profiles/mem.out > ./profiles/mem-prof.pdf 

  mock:
    desc: Generates all mocks
    cmd: go generate $INTERNAL_WILDCARD

  # TOOLS

  dev:
    desc: Build and start app with file listener (hot reload)
    deps: [build]
    silent: true
    watch: true
    cmd: ./bin/main {{.FLAG_CONFIG}}
    sources: 
      - ./*.go,
      - ./**/*.go

  lint:
    desc: Lint all files
    cmd: fieldalignment -fix $INTERNAL_WILDCARD
    ignore_error: true
      
  graph:
    desc: Generate dependency graph in pdf
    cmd: go mod graph | modgraphviz | dot -Tpdf -o graph.pdf
    
  # DOCS

  swagger:
    desc: Generate swagger docs
    env:
      SWAG: swag init -g ./cmd/sso/main.go
    cmds:
      # make internal docs (go-based)
      - $SWAG -o $GEN_DIR/docs --ot go
      # make sdk docs (json,yaml)
      - $SWAG -o ./sso-sdk/docs --ot json,yaml